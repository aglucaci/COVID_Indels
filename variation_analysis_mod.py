# -*- coding: utf-8 -*-
"""variation_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QtoOdclq7piuN7astFmjGFoo5QYV7vnt
"""

# Import files from local drive
#from google.colab import files
#uploaded = files.upload()

#!rm -f *.fas
#!ls

# =============================================================================
# Imports
# =============================================================================
import os
#!pip install biopython
from Bio import SeqIO
from Bio.SeqRecord import SeqRecord
from Bio.Seq import Seq
import plotly.graph_objects as go
import plotly
import numpy as np
import sys
import plotly.express as px

# =============================================================================
# Declares
# =============================================================================

#fasta_file = sys.argv[1]
#output_dir = sys.argv[2]
gaps_dict = {}
#input_directory = "../analysis/04052020/hyphy_alignments/withref"
input_directory = sys.argv[1]
output_directory = sys.argv[2]
# =============================================================================
# Main subroutine
# =============================================================================


for filename in os.listdir(input_directory):
    if filename.endswith(".fas"):
      #print("#", filename)
      gene = filename.replace("sequences.", "").replace(".compressed.fas", "")
      gaps_dict[gene] = {}
      with open(os.path.join(input_directory, filename), "r") as handle:
        for record in SeqIO.parse(handle, "fasta"): 
          ID = record.id
          SEQ = record.seq
          num_gaps = str(SEQ).count("-") #codon aware alignment
          seq_length = len(str(SEQ))

          #print("\t", gene, ID, num_gaps, seq_length)
          #original
          gaps_dict[gene][ID] = num_gaps

          #"normalized"
          #gaps_dict[gene][ID] = num_gaps / (seq_length / 3)

        #end inner for
      #end with
    #end if
#end outer for


# =============================================================================
# Plot
# =============================================================================
# https://plotly.com/python/box-plots/
#init figure
fig = go.Figure()

for gene in gaps_dict:
  #gene = gene.replace("gisaid_cov2020_fasta.", "")
  array = []
  ID_array = []
  for item in gaps_dict[gene]:
    array += [gaps_dict[gene][item]]
    ID_array += [item]
  #end inner for

  #fig.add_trace(go.Box(y=array, name=gene, hovertext=ID_array, marker_size=2, line_width=1))
  
  fig.add_trace(go.Box(y=array, name=gene, hovertext=ID_array))
  
  #.add_trace(px.box(y=array, x=gene, hover_data=ID_array, marginal_y="histogram"))
#end outer for

#overlay the box plots
fig.update_layout(barmode='overlay', title="A potential measure of indel events, as gaps per gene (SARS-CoV-2)", xaxis_title="SARS-CoV-2 gene", yaxis_title="Number of gaps per gene",)
#fig.update_layout(yaxis=dict(dtick=5))

#plot
#fig.show()
plotly.offline.plot(fig, filename=os.path.join(output_directory, 'gap_analysis.html'))
# =============================================================================
# End of file
# =============================================================================
